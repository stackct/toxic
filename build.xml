<project name="toxic" xmlns:if="ant:if" default="test">
  <property name="groovy.version" value="2.4.5" />
  <property name="output" location="gen"/>
  <property name="lib" location="lib"/>
  <property name="conf" location="conf"/>
  <property name="res" location="resources"/>
  <property name="src" location="src"/>
  <property name="src-test" location="test"/>
  <property name="class" location="${output}/classes"/>
  <property name="unit" location="${output}/unit"/>
  <property name="results" location="${output}/unit/RESULTS"/>
  <property name="version" value="0.0.1"/>
  <property name="version.properties" value="${class}/${ant.project.name}-version.properties"/>

  <path id="cp.compile">
    <fileset dir="${lib}">
      <include name="*.jar" />
    </fileset>
    <pathelement location="${class}" />
    <pathelement location="${conf}" />
    <pathelement location="${res}" />
  </path>
  
  <path id="cp.test">
    <path refid="cp.compile" />
    <pathelement location="${unit}" />
  </path>
  
  <target name="clean">
    <delete dir="${output}" />
  </target>
  
  <target name="init">
    <mkdir dir="${class}" />
    <mkdir dir="${unit}" />
    
    <tstamp>
      <format property="build.date" pattern="yyyy/M/dd"/>
      <format property="build.time" pattern="HH:mm:ss"/>
    </tstamp>
    
    <echo file="${version.properties}">
      version=${version}
      buildDate=${build.date}
      buildTime=${build.time}
    </echo>    

  </target>
  
  <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="cp.compile"/>

  <target name="compile" depends="init">
    <groovyc srcdir="${src}" destdir="${class}" classpathref="cp.compile">
      <javac debug="on" deprecation="true"/>
    </groovyc>
  </target>

  <target name="compile-test" depends="init,compile">
    <groovyc srcdir="${src-test}/unit" destdir="${unit}" classpathref="cp.compile">
      <javac debug="on" deprecation="true"/>
    </groovyc>
  </target>

  <target name="package" depends="compile">
    <jar destfile="${output}/toxic.jar" basedir="${class}"/>
  </target>

  <target name="single-test" depends="compile-test" description="Run single unit test">
    <property name="test.class" value="*" />
    <property name="test.methods" value="*" />
    <property name="test.formatter" value="plain" />
    <property name="test.useFile" value="false" />

    <junit printsummary="true" haltonerror="true" haltonfailure="true">
      <sysproperty key="TOXIC_HOME" value="${basedir}"/>
      <formatter type="${test.formatter}" usefile="${test.useFile}" />
      <test name="${test.class}" methods="${test.methods}" />
      <classpath refid="cp.test" />
    </junit>

  </target>

  <target name="test" depends="compile-test" description="Run unit tests">
    <echo message="output=${output}; results=${results}" />
    <delete dir="${results}" failonerror="false" />
    <mkdir dir="${results}" />
    <mkdir dir="${results}/html" />

    <property name="test.class" value="*" />
    <property name="test.formatter" value="xml" />
    <property name="test.useFile" value="true" />

    <junit printsummary="true" haltonerror="false" haltonfailure="false" fork="true" forkmode="once" failureproperty="testFailed" showoutput="false">
      <sysproperty key="TOXIC_HOME" value="${basedir}"/>
      <formatter type="${test.formatter}" usefile="${test.useFile}" />
      <batchtest todir="${results}">
        <fileset dir="${unit}">
          <include name="**/${test.class}Test.class" />
        </fileset>
      </batchtest>
      <classpath refid="cp.test" />
    </junit>
    
    <antcall target="test-groovy-junit-reports"/>
  </target>

  <target name="test-groovy-junit-reports">
    <echo message=""/>
    <junitreport todir="${results}">
      <fileset dir="${results}">
        <include name="TEST-*.xml" />
      </fileset>
      <report todir="${results}/html" />
    </junitreport>
    <echo message=""/>
    <echo message="See a pretty junit report at ${results}/html/index.html" />
    <fail if="testFailed" message="Unit test(s) failed. See reports!" />
  </target>
</project>