###############################################################################
# The following properties can all be overriden at the command line by
# specifying the key=value pair preceded by a hyphen.
# Ex: bin/toxic -pidFile=toxic2.pid
###############################################################################

# Specify a custom filename for the PID file.  This file will be used to store
# the process ID of the CloneAgent.  Also, if the PID file is deleted, it will
# signal the CloneAgent to shutdown.  Leave this to default if only using a
# single CloneAgent per server.
pidFile=toxic.pid


###############################################################################
# Logging Configuration
###############################################################################
# Override the log level specified in the log4j.xml file.
logLevel=

# Upon initial startup, load all prior properties files located in the
# specified -doDir directory and it's parent directories, preserving order.
parentProps=true

###############################################################################
# Agent-specific properties
###############################################################################
# Number of task masters to spawn
agentTaskMasterCount=1

# Unique ID for this agent, to differentiate across multiple agent instances
# that may be running on this same operating system, or on another remote OS.
agentId=``java.lang.management.ManagementFactory.getRuntimeMXBean().name``

# The fully-qualified class names of the TaskResultsFormatter implementation
agent.formatter.1=toxic.junit.JUnitFormatter

# The fully-qualified class names of the TaskResultsFormatter implementation
# Useful for subtasking out to remote Toxic servers and merging the results
# into a single results list.
#agent.formatter.2=toxic.SerializedFormatter

###############################################################################
# TaskMaster-specific properties
###############################################################################
# The number of times (reps) to repeat the task list
tmReps=1

# Number of milliseconds to wait in between each rep
tmRepPauseMillis=1

# Set to true to discard each repetition's results.  Useful for running
# long-duration tests where millions of results could be accumulated,
# potentially exhausting heap memory.  If the tmHaltOnError option is
# enabled, and a rep fails, then those results will be preserved.
tmDiscardRepResults=false

# Number of milliseconds to wait in between each task within the rep
tmTaskPauseMillis=1

# If set, each spawned task master will attempt to open its own properties file
# located in the classpath.  The full filename should resemble tm1.properties,
# tm2.properties, ..., tm100.properties, where "tm" is the value
# of this tmPropFilePrefix, and the numbers 1 through 100 represent the
# task master ID.  For example, if agentTaskMasterCount is set to 3, then
# tm1.properties will be used by the first task master that is spawned.
# If the task master-specific file exists and is successfully loaded
# the properties in it will be added to (or replace) the default properties,
# specified in this properties file.  If this property is not set, or the
# specified property file cannot be loaded, then the task master will only
# use the properties specified in this file.
tmPropFilePrefix=tm

# The fully-qualified class name of the TaskOrganizer implementation.
tmOrganizerClass=toxic.dir.DirOrganizer

# The unique ID of the current task master within this agent, or leave blank
# to be auto-assigned.
tmId=

# Set to true to abort the task master immediately if a task fails.
tmHaltOnError=false

###############################################################################
# TaskOrganizer-specific properties
###############################################################################
# The starting file or directory to traverse.  If a file, it will be the only
# task executed in the parent task master. If a directory, the directory
# contents will be sorted in ascending order and if the next item is a file
# then it will be executed.  If a directory, its contents will be recursively
# traversed and executed.
doDir=

# As the directory organizer traverses a directory hierarchy, for each task
# it encounters it will save that task's parent task path (not necessarily
# the same as the file path) into the property set to allow consumers to
# uniquely identify this task in relation to its place in the overall task
# sequence.  This delimiter is used to separate each parent directory or link
# file name.
doPathDelimiter=/

# The fully-qualified class name of the Task implementation for Xml requests.
doTaskClass.xml=toxic.xml.XmlTask

# The fully-qualified class name of the Task implementation for Groovy files.
doTaskClass.groovy=toxic.groovy.GroovyTask

# The fully-qualified class name of the Task implementation for Groovy files.
doTaskClass.properties=toxic.PropertiesTask

# The fully-qualified class name of the Task implementation for generic files.
doTaskClass.file=toxic.dir.FileTask

# The fully-qualified class name of the Task implementation for sql queries.
doTaskClass.sql=toxic.sql.SqlTask

# The fully-qualified class name of the Task implementation for Splunk queries.
doTaskClass.splunk=toxic.splunk.SplunkTask

# The fully-qualified class name of the Task implementation for generic exec calls.
doTaskClass.exec=toxic.shell.ExecTask

# The fully-qualified class name of the Task implementation for DSL functions.
doTaskClass.fn=toxic.dsl.FunctionTask

# The fully-qualified class name of the Task implementation for WebSocket requests.
doTaskClass.ws=toxic.websocket.WebSocketTask

# Map Selenium toxic files to Selenium Task
#
# DISABLE WHILE WE EXPERIMENT WITH groovy task EMBEDDED SELENIUM TESTING
#doTaskClass.selenium=toxic.selenium.SeleniumTask

###############################################################################
# Task-specific properties
###############################################################################
# Number of consecutive iterations to perform this specific task. This is
# different from tmReps since tmReps is the number of repetitions to perform
# the entire test suite.
taskIterations=1

# Replacers can manipulate the compared inputs, performing operations like
# variable substitution or other processing.
task.replacer.1=toxic.groovy.GroovyReplacer
task.replacer.2=toxic.VariableReplacer

# Validators compare the input to a known/expected response, performing
# additional operations like variable saving or other processing.
task.validator.1=toxic.HttpValidator

###############################################################################
# XmlTask-specific properties
###############################################################################
# Specify the server hostname or IP and port number to which to send the
# XML requests.
xmlHost=localhost
xmlPort=80
xmlSsl=false

# Optional HTTP method that will be prepended if the original XML source is
# not yet setup with the required HTTP method.  This is determined by checking
# if the original XML source starts with the GET, POST, etc HTTP methods.  If
# not, then this method will be prefixed into the XML source along with any
# optional headers.
xmlMethod=GET / HTTP/1.1

# Optional headers to be prefixed after the HTTP method.  See the xmlMethod
# comments to understand when these will be utilized.
xml.header.Host=`memory.xmlHost`
xml.header.User-Agent=Toxic/``toxic.Toxic.version`` (``System.getProperty("user.name")``)
xml.header.Accept-Language=en-US
xml.header.Content-Type=text/xml; charset="UTF-8"
xml.header.Connection=close

# Set to true to include the data sent and received in the log output.
xmlVerbose=false

# Set to the number of milliseconds to wait for a response before closing the
# socket.
xmlTimeout=10000

# Pause between request lines to simulate manual user interaction over a socket
xmlLinePause=0

# The number of retries if the socket is unexpectedly dropped or can't connect.
# Set to 0 to not retry when a socket failure occurs.
xmlRetries=0

###############################################################################
# TextValidator-specific properties.
###############################################################################
# How many characters before and after the character index that failed to match
# will be logged.  More characters make it easier to gain a context around
# the mismatch, but also can clutter logs.
tvNearChars=10

# The delimiter used for embedding variables and text control functions into
# compared texts.  Ex: Hello %myVar%!
# Delimiters must be a single character.
tvDelimiter=%

###############################################################################
# VariableReplacer-specific properties.
###############################################################################
# The delimiters used for embedding variables into text strings. Ex: %foo%
# Delimiters must be a single character.
varStartDelimiter=%
varStopDelimiter=%

###############################################################################
# JUnit-specific properties.
###############################################################################
# Directory where the JUnit XML output should be saved
junitFile=./gen/results/toxic.xml

###############################################################################
# Serialized-specific properties.
###############################################################################
# Directory where the Serialized TaskResult output should be saved
serializedFile=./gen/results/serialized_``toxic.Toxic.version``.ser

###############################################################################
# SQL-specific properties
###############################################################################
sqlUrl=jdbc:jtds:sqlserver://sqlserverhost/MyDB
sqlUser=test
sqlPass=myp4ss
sqlDriver=net.sourceforge.jtds.jdbc.Driver
sqlVerbose=true

###############################################################################
# Groovy-specific properties
###############################################################################
groovyScriptBase=toxic.groovy.GroovyScriptBase
groovyResetClassLoaderExecutionCount=10000

###############################################################################
# Job-specific properties
###############################################################################
job.notification.0=toxic.slack.SlackNotification
job.notification.1=toxic.job.SmtpNotification

###############################################################################
# Splunk-specific properties
###############################################################################
splunk.header.Authorization=Basic `"${memory.splunk_username}:${memory.splunk_password}".bytes.encodeBase64()`

# Configure Splunk TCP appender for job logging
job.splunk.loghost=
job.splunk.logport=

###############################################################################
# Web Server properties
###############################################################################
web.tokenizerUrl=http://localhost:8001

###############################################################################
# AWS properties
###############################################################################
aws.ecr.profile=

###############################################################################
# Artifact collection properties
###############################################################################
artifactsDirectory=`memory["job.artifactsDir"] ?: "${memory.homePath}/gen/artifacts"`

###############################################################################
# helper functions
###############################################################################
generateUniqueNumberTmp=``memory.generateUniqueNumber = { int digits = 0 -> synchronized(memory.generateUniqueNumber) { if (!memory.uun1) memory.uun1 = System.currentTimeMillis(); memory.uun1 = memory.uun1 + 1; return memory.uun1.toString()[-digits..-1] } }``